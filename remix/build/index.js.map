{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/Users/simeongriggs/Sites/simeonGriggs/remix/app/root.tsx", "../app/components/Header.tsx", "../app/components/Twitter.tsx", "../app/components/GitHub.tsx", "../app/lib/sanityServer.tsx", "../app/lib/sanityConfig.ts", "../app/components/Banner.tsx", "../app/lib/helpers.ts", "../app/lib/sanityImageUrl.ts", "../app/components/Grid.tsx", "../app/lib/queries.tsx", "route-module:/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/$slug.tsx", "../app/components/PortableText.tsx", "../app/components/Button.tsx", "../app/components/Prism.tsx", "../app/components/ProseableText.tsx", "../app/components/Label.tsx", "../app/components/Date.tsx", "../app/components/TableOfContents.tsx", "../app/hooks/usePreviewSubscription.tsx", "route-module:/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/index.tsx", "../app/components/Intro.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/root.tsx\";\nimport * as route1 from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/$slug.tsx\";\nimport * as route2 from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/$slug\": {\n    id: \"routes/$slug\",\n    parentId: \"root\",\n    path: \":slug\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route2\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import ReactDOMServer from \"react-dom/server\";\nimport type { EntryContext } from \"remix\";\nimport { RemixServer } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = ReactDOMServer.renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import type { LinksFunction, LoaderFunction } from \"remix\";\nimport {\n  Meta,\n  Links,\n  Scripts,\n  useLoaderData,\n  LiveReload,\n  useCatch,\n} from \"remix\";\nimport { Outlet } from \"react-router-dom\";\nimport { useDarkMode } from \"usehooks-ts\";\n\nimport stylesUrl from \"~/styles/global.css\";\n\nimport Header from \"~/components/Header\";\nimport { getClient } from \"~/lib/sanityServer\";\nimport { removeTrailingSlash } from \"./lib/helpers\";\nimport Banner from \"./components/Banner\";\nimport Grid from \"./components/Grid\";\nimport { siteMetaQuery } from \"./lib/queries\";\n\nexport const handle = `root`;\n\nexport let links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nexport let loader: LoaderFunction = async ({ params }) => {\n  const siteMeta = await getClient().fetch(siteMetaQuery);\n\n  return { siteMeta };\n};\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  const { isDarkMode } = useDarkMode();\n  const data = useLoaderData();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <link rel=\"icon\" href=\"/favicon.png\" type=\"image/png\" />\n        {/* <link\n          rel=\"canonical\"\n          href={removeTrailingSlash(\n            `${data.requestInfo.origin}${data.requestInfo.path}`\n          )}\n        /> */}\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width,initial-scale=1,viewport-fit=cover\"\n        />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body\n        className={`transition-colors duration-100 ease-out ${\n          isDarkMode ? `dark text-white bg-blue-900` : ``\n        }`}\n      >\n        {children}\n\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <Grid />}\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  let data = useLoaderData();\n  const { siteMeta } = data;\n\n  return (\n    <Document>\n      <Header siteMeta={siteMeta} />\n      <Banner />\n      <main className=\"px-4 md:px-0 grid grid-cols-6 md:grid-cols-12 lg:grid-cols-16 min-h-screen w-screen\">\n        <Outlet />\n      </main>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  switch (caught.status) {\n    case 401:\n    case 404:\n      return (\n        <Document title={`${caught.status} ${caught.statusText}`}>\n          <h1>\n            {caught.status} {caught.statusText}\n          </h1>\n        </Document>\n      );\n\n    default:\n      throw new Error(\n        `Unexpected caught response with status: ${caught.status}`\n      );\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return (\n    <Document title=\"Uh-oh!\">\n      <h1>App Error</h1>\n      <pre>{error.message}</pre>\n      <p>\n        Replace this UI with what you want users to see when your app throws\n        uncaught errors.\n      </p>\n    </Document>\n  );\n}\n", "/* eslint-disable react/jsx-filename-extension */\nimport { MoonIcon, SunIcon } from \"@heroicons/react/solid\";\nimport { Link } from \"remix\";\nimport { useDarkMode } from \"usehooks-ts\";\n\nimport Twitter from \"./Twitter\";\nimport GitHub from \"./GitHub\";\n\ninterface SiteMeta {\n  title: string;\n}\n\nconst Header = ({ siteMeta }: { siteMeta: SiteMeta }) => {\n  const { title } = siteMeta ?? {};\n  const menuClasses =\n    \"fixed text-sm z-50 inset-0 bottom-auto md:bottom-0 md:right-auto md:w-1/12 lg:w-1/16 flex items-center justify-center\";\n  const buttonClasses =\n    \"flex items-center justify-center p-1 w-7 h-7 md:w-10 md:h-10 text-blue-500 rounded-full bg-white hover:bg-blue-900 hover:text-white\";\n\n  const { isDarkMode, toggle } = useDarkMode();\n\n  return (\n    <header className={menuClasses}>\n      <div className=\"md:w-full bg-blue-500 py-2 px-3 md:py-8 text-white font-mono flex md:flex-col justify-center items-center\">\n        <Link\n          to=\"/\"\n          className=\"text-vertical flex items-center justify-center hover:bg-blue-900\"\n        >\n          {title}\n        </Link>\n\n        <div className=\"w-12 md:h-16 lg:h-24 md:w-auto border-t md:border-t-none md:border-l border-white mx-3 md:mx-0 md:my-4\" />\n\n        <div className=\"flex space-x-3 md:flex-col md:space-x-0 md:space-y-3\">\n          <a\n            className={buttonClasses}\n            href=\"https://twitter.com/simeonGriggs/\"\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Twitter className=\"w-full\" />\n            <div className=\"sr-only\">Twitter</div>\n          </a>\n          <a\n            className={buttonClasses}\n            href=\"https://github.com/SimeonGriggs/\"\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <GitHub className=\"w-full\" />\n            <div className=\"sr-only\">GitHub</div>\n          </a>\n          <button\n            type=\"button\"\n            onClick={() => toggle()}\n            className={buttonClasses}\n          >\n            {isDarkMode ? (\n              <SunIcon className=\"w-full h-auto md:w-5\" />\n            ) : (\n              <MoonIcon className=\"w-full h-auto md:w-5\" />\n            )}\n            <div className=\"sr-only\">{isDarkMode ? `Light` : `Dark`} Mode</div>\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n", "function Twitter({ className }: { className: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      className={className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M3 17.68a10.215 10.215 0 005.53 1.623c6.697 0 10.478-5.658 10.25-10.73a7.346 7.346 0 001.8-1.866 7.192 7.192 0 01-2.072.565 3.604 3.604 0 001.588-1.996 7.196 7.196 0 01-2.308.877 3.608 3.608 0 00-6.153 3.289 10.246 10.246 0 01-7.412-3.766 3.612 3.612 0 001.12 4.816 3.558 3.558 0 01-1.635-.454A3.612 3.612 0 006.6 13.622a3.623 3.623 0 01-1.63.062 3.612 3.612 0 003.368 2.504A7.238 7.238 0 013 17.68z\"\n      />\n    </svg>\n  );\n}\n\nexport default Twitter;\n", "function GitHub({ className }: { className: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      className={className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n      />\n    </svg>\n  );\n}\n\nexport default GitHub;\n", "import { createClient } from \"next-sanity\";\n\nimport { config } from \"./sanityConfig\";\n\n// Set up the client for fetching data in the getProps page functions\nexport const sanityClient = createClient(config);\n\n// Set up a preview client with serverless authentication for drafts\nexport const previewClient = createClient({\n  ...config,\n  useCdn: false,\n  // token: process?.env?.SANITY_API_TOKEN,\n});\n\n// Helper function for easily switching between normal client and preview client\nexport const getClient = (usePreview = false) =>\n  usePreview ? previewClient : sanityClient;\n", "export const config = {\n  /**\n   * Find your project ID and dataset in `sanity.json` in your studio project.\n   * These are considered \u201Cpublic\u201D, but you can use environment variables\n   * if you want differ between local dev and production.\n   *\n   * https://nextjs.org/docs/basic-features/environment-variables\n   **/\n  // dataset: process.env.NEXT_PUBLIC_SANITY_DATASET || \"production\",\n  // projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID || \"az8av6xl\",\n  dataset: \"production\",\n  projectId: \"az8av6xl\",\n  apiVersion: \"2021-03-25\",\n  /**\n   * Set useCdn to `false` if your application require the freshest possible\n   * data always (potentially slightly slower and a bit more expensive).\n   * Authenticated request (like preview) will always bypass the CDN\n   **/\n  // useCdn: process.env.NODE_ENV === \"production\",\n  useCdn: true,\n};\n", "import { useState, useEffect } from \"react\";\nimport { useMatches } from \"remix\";\nimport { useLocation } from \"react-router\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useWindowSize } from \"usehooks-ts\";\n\nimport { clipPathInset } from \"../lib/helpers\";\nimport sanityImageUrl from \"~/lib/sanityImageUrl\";\n\ninterface BannerSizeImage {\n  scale: number;\n  x: number;\n}\n\ninterface BannerSizeWrapper {\n  clipPath: string;\n}\n\ninterface BannerSize {\n  image?: BannerSizeImage;\n  wrapper?: BannerSizeWrapper;\n}\n\nconst Banner = () => {\n  const { pathname } = useLocation();\n  const matches = useMatches();\n  const [isHome, setIsHome] = useState(pathname === \"/\");\n  const [bannerSize, setBannerSize]: [BannerSize, any] = useState({});\n  const [bannerImage, setBannerImage] = useState(null);\n  const { width: windowWidth } = useWindowSize();\n\n  function updateBannerSize(useHomeSize = false) {\n    // Double check, if no prop was given we should double check\n    const checkHomeSize =\n      window && typeof useHomeSize === \"undefined\"\n        ? window.location.pathname === \"/\"\n        : useHomeSize;\n\n    const bannerHomeMobile = {\n      wrapper: { clipPath: `polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)` },\n      image: { scale: 1, x: 0 },\n    };\n\n    const bannerPostMobile = {\n      wrapper: { clipPath: `polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)` },\n      image: { scale: 1, x: 0 },\n    };\n\n    const bannerHomeTablet = {\n      wrapper: { clipPath: `polygon(${clipPathInset(12, 1, 4, 1)})` },\n      image: { scale: (1 / 12) * 10, x: `${(100 / 12) * 2}%` },\n    };\n\n    const bannerPostTablet = {\n      wrapper: { clipPath: `polygon(${clipPathInset(12, 0, 1, 0)})` },\n      image: { scale: 1, x: `-10%` },\n    };\n\n    const bannerHomeDesktop = {\n      wrapper: { clipPath: `polygon(${clipPathInset(16, 1, 6, 1)})` },\n      image: { scale: (1 / 16) * 15, x: `${(100 / 16) * 2}%` },\n    };\n\n    const bannerPostDesktop = {\n      wrapper: { clipPath: `polygon(${clipPathInset(16, 0, 3, 0)})` },\n      image: { scale: 1, x: `-20%` },\n    };\n\n    switch (true) {\n      case windowWidth >= 768 && windowWidth < 1024:\n        setBannerSize(checkHomeSize ? bannerHomeTablet : bannerPostTablet);\n        break;\n      case windowWidth >= 1024:\n        setBannerSize(checkHomeSize ? bannerHomeDesktop : bannerPostDesktop);\n        break;\n      default:\n        setBannerSize(checkHomeSize ? bannerHomeMobile : bannerPostMobile);\n        break;\n    }\n  }\n\n  // Set initial banner\n  useEffect(() => {\n    if (matches.length) {\n      const thisPathData = matches.find((match: any) =>\n        pathname === \"/\" ? match.handle === \"home\" : match.handle === \"article\"\n      )?.data;\n\n      if (thisPathData) {\n        const image =\n          pathname === \"/\"\n            ? thisPathData?.articles[0].image\n            : thisPathData?.initialData?.image;\n        if (image) {\n          setBannerImage(image);\n        }\n      }\n    }\n  }, [pathname]);\n\n  // Update banner size on resize\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      updateBannerSize();\n\n      window.addEventListener(\"resize\", () => updateBannerSize());\n    }\n  }, []);\n\n  // Update banner size when path changes\n  useEffect(() => {\n    const locationIsHome = pathname === \"/\";\n    setIsHome(locationIsHome);\n    updateBannerSize(locationIsHome);\n  }, [pathname, windowWidth]);\n\n  if (!windowWidth) return null;\n\n  return (\n    // <bannerContext.Consumer>\n    //   {(context) => (\n    <motion.div\n      animate={{ ...bannerSize.wrapper, opacity: 1 }}\n      transition={{ duration: 0.4 }}\n      className={`pointer-events-none h-32 md:h-screen opacity-0 w-screen z-40 origin-top-left ${\n        isHome ? `fixed` : `absolute md:fixed`\n      }`}\n    >\n      {bannerImage && (\n        <motion.div\n          className=\"absolute inset-0 h-32 md:h-screen md:right-auto md:w-4/12 lg:w-6/16 bg-blue-500\"\n          initial={{ opacity: 0, ...bannerSize.image }}\n          animate={{ opacity: 1, ...bannerSize.image }}\n          exit={{ opacity: 0, ...bannerSize.image }}\n          transition={{ duration: 0.2 }}\n        >\n          {bannerImage && (\n            <AnimatePresence>\n              <motion.img\n                key={bannerImage?.asset?._id}\n                src={sanityImageUrl(bannerImage)\n                  .height(1200)\n                  .width(600)\n                  .toString()}\n                alt={bannerImage?.altText ?? null}\n                className=\"hidden md:block w-full h-full object-fill\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n              />\n            </AnimatePresence>\n          )}\n        </motion.div>\n      )}\n    </motion.div>\n    //   )}\n    // </bannerContext.Consumer>\n  );\n};\n\nexport default Banner;\n", "export function removeTrailingSlash(s: string) {\n  return s.endsWith(\"/\") ? s.slice(0, -1) : s;\n}\n\nfunction twoDecimals(num: number) {\n  return Math.round(num * 100) / 100;\n}\n\nexport function heightColumnOffset(columns = 16) {\n  if (typeof window === \"undefined\") {\n    return 0;\n  }\n\n  // Clip paths need to be % based, but I want the y-size to match the width\n  // So, what % of the window HEIGHT, is ONE COLUMN of the WIDTH?\n  const { innerHeight, innerWidth } = window;\n  const widthColumn = innerWidth / columns;\n  const heightMinusColumn = innerHeight - widthColumn;\n  const heightPerc = (heightMinusColumn / innerHeight) * 100;\n\n  return twoDecimals(heightPerc);\n}\n\nexport function clipPathInset(\n  columns: number,\n  left: number,\n  right: number,\n  y: number\n) {\n  const heightPerc = y ? heightColumnOffset(columns) : 100;\n\n  const corners = [\n    `${(100 / columns) * left}% ${twoDecimals(100 - heightPerc)}%`,\n    `${(100 / columns) * right}% ${twoDecimals(100 - heightPerc)}%`,\n    `${(100 / columns) * right}% ${heightPerc}%`,\n    `${(100 / columns) * left}% ${heightPerc}%`,\n  ];\n\n  return corners.join(\",\");\n}\n", "import imageUrlBuilder from \"@sanity/image-url\";\nimport { config } from \"./sanityConfig\";\n\nconst { projectId, dataset } = config;\nconst builder = imageUrlBuilder({ projectId, dataset });\n\nexport default function sanityImageUrl(source: any) {\n  return builder.image(source);\n}\n", "export default function Grid() {\n  return (\n    <div className=\"pointer-events-none fixed inset-0 w-screen h-screen grid grid-cols-6 md:grid-cols-12 lg:grid-cols-16\">\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden lg:block\" />\n      <div className=\"border-r border-red-500 hidden lg:block\" />\n      <div className=\"border-r border-red-500 hidden lg:block\" />\n      <div className=\"border-red-500 hidden lg:block\" />\n    </div>\n  );\n}\n", "import { groq } from \"@sanity/groq-store\";\n\nexport const siteMetaQuery = groq`*[_id == \"siteMeta\"][0]`;\n\nexport const articleQuery = groq`*[_type == \"article\" && slug.current == $slug][0]{\n    ...,\n    image {\n      ...,\n      asset->\n    },\n    content[] {\n        ...,\n        _type == \"image\" => {\n            ...,\n            asset->\n        },\n    }\n  }`;\n\nexport const homeQuery = groq`*[_type == \"article\" && defined(slug.current)]|order(published desc){\n    _id,\n    title,\n    \"slug\": slug.current,\n    published,\n    updated,\n    summary,\n    image {\n      ...,\n      asset->\n    }\n  }`;\n", "import type { MetaFunction, LoaderFunction } from \"remix\";\nimport { useLoaderData } from \"remix\";\n\nimport sanityImageUrl from \"~/lib/sanityImageUrl\";\nimport { articleQuery } from \"~/lib/queries\";\nimport { getClient } from \"~/lib/sanityServer\";\n\nimport ProseableText from \"~/components/ProseableText\";\nimport Label from \"~/components/Label\";\nimport Date from \"~/components/Date\";\nimport TableOfContents from \"~/components/TableOfContents\";\nimport { usePreviewSubscription } from \"~/hooks/usePreviewSubscription\";\n\nexport const handle = `article`;\n\nexport let meta: MetaFunction = ({ data, parentsData, location }) => {\n  const { title, summary, image } = data?.initialData ?? {};\n  const { siteMeta } = parentsData?.root ?? {};\n  const canonical = siteMeta?.siteUrl + location.pathname;\n  const imageWidth = 1200;\n  const imageHeight = 630;\n\n  const imageMeta = image\n    ? {\n        \"og:image:width\": image ? String(imageWidth) : null,\n        \"og:image:height\": image ? String(imageHeight) : null,\n        \"og:image\": image\n          ? sanityImageUrl(image)\n              .height(imageHeight)\n              .width(imageWidth)\n              .toString()\n          : null,\n      }\n    : {};\n\n  return {\n    \"theme-color\": \"#2522fc\",\n    title: `${title} | ${siteMeta?.title}`,\n    description: summary,\n    canonical,\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:creator\": siteMeta?.author,\n    \"twitter:title\": title,\n    \"twitter:description\": siteMeta?.description,\n    type: \"website\",\n    \"og:url\": canonical,\n    ...imageMeta,\n  };\n};\n\n// export let links: LinksFunction = () => {\n//   return [{ rel: \"canonical\", href: stylesUrl }];\n// };\n\n// Runs server side\nexport let loader: LoaderFunction = async ({ params }) => {\n  const preview = false;\n  const article = await getClient(preview).fetch(articleQuery, params);\n\n  return { initialData: article, query: articleQuery, params, preview };\n};\n\n// Runs client side\nexport default function Article() {\n  let { initialData, query, params, preview } = useLoaderData();\n\n  const { data: article } = usePreviewSubscription(query, {\n    params,\n    initialData,\n    enabled: preview,\n  });\n\n  return (\n    <>\n      <header className=\"mt-48 md:mt-0 row-start-1 col-span-6 md:col-start-3 md:col-span-10 lg:col-start-5 lg:col-span-11\">\n        <div className=\"py-12 md:py-24 max-w-xl\">\n          <h1 className=\"leading-none font-black mb-8 tracking-tighter text-4xl md:text-6xl text-blue-500\">\n            {article.title}\n          </h1>\n          <p className=\"text-lg dark:text-blue-100 md:leading-8 font-mono\">\n            {article.summary}\n          </p>\n        </div>\n      </header>\n      <aside className=\"mb-4 md:mb-0 row-start-2 md:row-start-2 col-span-6 md:col-start-3 md:col-span-3 lg:col-start-5 lg:col-span-3 relative\">\n        {article?.content?.length > 0 ? (\n          <div className=\"grid grid-cols-1 gap-y-4 md:pr-12 sticky top-6\">\n            <Label>Table of Contents</Label>\n            <TableOfContents blocks={article.content} />\n          </div>\n        ) : null}\n      </aside>\n      <section className=\"row-start-3 md:row-start-2 col-span-6 lg:col-start-8 lg:col-span-8 pb-24\">\n        <Date updated={article?.updated} published={article?.published} />\n        {article?.content?.length > 0 ? (\n          <ProseableText blocks={article.content} />\n        ) : null}\n      </section>\n    </>\n  );\n}\n", "import React from \"react\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport getYouTubeID from \"get-youtube-id\";\n\nimport { config } from \"~/lib/sanityConfig\";\nimport sanityImageUrl from \"~/lib/sanityImageUrl\";\nimport Button from \"./Button\";\nimport Prism from \"./Prism\";\n\nconst { projectId, dataset } = config;\n\nconst BlockRenderer = (props) => {\n  const { style = \"normal\" } = props.node;\n\n  if (/^h\\d/.test(style)) {\n    return React.createElement(style, { id: props.node._key }, props.children);\n  }\n\n  if ([\"code\", \"pre\"].includes(style)) {\n    const text = props?.node?.children.map(({ text }) => text).join(\"\");\n    return text ? <Prism code={text} /> : null;\n  }\n\n  return BlockContent.defaultSerializers.types.block(props);\n};\n\nconst serializers = {\n  container: ({ children }) => children,\n  types: {\n    block: BlockRenderer,\n    video: ({ node }) => {\n      const id = getYouTubeID(node.url);\n\n      // <YouTube v={id} alt={node?.title ?? ``} />\n\n      return (\n        <a href={node.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img\n            src={`https://i.ytimg.com/vi/${id}/hqdefault.jpg`}\n            loading=\"lazy\"\n            alt={node?.title ?? ``}\n            className=\"w-full h-full object-cover\"\n          />\n        </a>\n      );\n    },\n    break: () => <hr />,\n    image: ({ node }) => (\n      <p className=\"-mx-4 border-t border-b md:border border-gray-100\">\n        <img\n          loading=\"lazy\"\n          src={sanityImageUrl(node.asset).width(800).toString()}\n          alt={node?.asset?.altText}\n          className=\"w-full h-auto\"\n        />\n      </p>\n    ),\n    code: ({ node }) =>\n      node?.code ? <Prism code={node.code} language={node?.language} /> : null,\n    button: ({ node }) => (\n      <Button href={node.link.link}>{node.link.text}</Button>\n    ),\n  },\n};\n\nexport default function PortableText({ blocks }) {\n  return (\n    <BlockContent\n      blocks={blocks}\n      serializers={serializers}\n      projectId={projectId}\n      dataset={dataset}\n    />\n  );\n}\n", "import { Link } from \"react-router-dom\";\n\ninterface Props {\n  children: string;\n  to?: string;\n  className?: string;\n  href?: string;\n  disabled?: boolean;\n  target?: string;\n  type?: string;\n}\n\ninterface Attributes {\n  target?: string;\n  rel?: string;\n}\n\nconst Button = ({\n  children,\n  to,\n  className,\n  href,\n  disabled,\n  target,\n  type,\n}: Props) => {\n  if (type === \"submit\") {\n    return (\n      <button\n        disabled={disabled}\n        className={`button ${className || \"\"}`}\n        type=\"submit\"\n      >\n        <span className=\"px-3\">{children}</span>\n      </button>\n    );\n  }\n\n  // Open in new window?\n  const attributes: Attributes = {};\n  if (target === \"_blank\") {\n    attributes.target = \"_blank\";\n    attributes.rel = \"noopener\";\n  }\n\n  if (href) {\n    return (\n      <a {...attributes} className={`button ${className || \"\"}`} href={href}>\n        <span className=\"hidden md:block w-6 border-t border-white\" />\n        <span className=\"px-3\">{children}</span>\n        <span className=\"hidden md:block w-6 border-t border-white\" />\n      </a>\n    );\n  }\n\n  return (\n    <Link className={`button ${className || \"\"}`} to={to}>\n      {children}\n    </Link>\n  );\n};\n\nexport default Button;\n", "import Highlight, { defaultProps } from \"prism-react-renderer\";\nimport github from \"prism-react-renderer/themes/github\";\n\nexport default function Prism({ code = ``, language = `plaintext` }) {\n  return (\n    <Highlight {...defaultProps} code={code} language={language} theme={github}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n}\n", "import { useMemo } from \"react\";\n\nimport PortableText from \"./PortableText\";\n\n/**\n * Use Tailwind CSS's `prose` classes with Portable Text markup (blocks)\n * Without inheriting styles for custom components (types)\n * https://www.sanity.io/guides/tailwindcss-typography-prose-portable-text\n */\nexport default function ProseableText({ blocks = [] }) {\n  // Group together standard `_type === \"block\"`  blocks\n  // eg <p>, <li>, etc \u2013 and separate out everyone else\n  const blockGroups = blocks.reduce(\n    (acc, item) => {\n      const lastIdx = acc.length - 1;\n\n      if (\n        // We don't have items in this group yet\n        acc[lastIdx].length === 0 ||\n        // The last group has the same `type`\n        acc[lastIdx][0]._type === item._type\n      ) {\n        acc[lastIdx].push(item);\n      } else {\n        // Time to create a new group, because the `type` is different compared to last group\n        acc.push([item]);\n      }\n\n      return acc;\n    },\n    [[]]\n  );\n\n  if (!blockGroups?.length) return null;\n\n  return (\n    <>\n      {blockGroups.map((group) =>\n        group[0]._type === \"block\" ? (\n          <div\n            key={group[0]._key}\n            className=\"prose md:prose-lg dark:prose-dark prose-blue my-4 md:my-8\"\n          >\n            <PortableText blocks={group} />\n          </div>\n        ) : (\n          <PortableText key={group[0]._key} blocks={group} />\n        )\n      )}\n    </>\n  );\n}\n", "import React from \"react\";\n\nexport default function Label({ children }: { children: React.ReactNode }) {\n  return (\n    <p className=\"text-xs font-mono text-blue-700 dark:text-blue-100 uppercase\">\n      {children}\n    </p>\n  );\n}\n", "import React from \"react\";\n\nimport Label from \"./Label\";\n\nexport default function Date({\n  updated,\n  published,\n}: {\n  updated?: string;\n  published: string;\n}) {\n  return (\n    <Label>\n      <span className=\"flex flex-col md:flex-row md:items-center\">\n        {updated ? (\n          <span>\n            Updated {updated}{\" \"}\n            <span className=\"opacity-50\">// Published {published}</span>\n          </span>\n        ) : (\n          <span>{published}</span>\n        )}\n      </span>\n    </Label>\n  );\n}\n", "interface Child {\n  text: string;\n}\n\ninterface Block {\n  _key: string;\n  style: string;\n  children: [Child];\n}\n\nexport default function TableOfContents({ blocks }: { blocks: [Block] }) {\n  const headings = blocks.filter((block) => [\"h2\", \"h3\"].includes(block.style));\n\n  if (!headings?.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"grid grid-cols-1 gap-y-4 font-mono text-xs sticky top-0\">\n      {headings.map((heading) => (\n        <li\n          key={heading._key}\n          className={heading.style === \"h3\" ? `pl-3` : ``}\n          style={{ textIndent: heading.style === \"h3\" ? `-0.75rem` : `` }}\n        >\n          <a\n            href={`#${heading._key}`}\n            className=\"text-blue-500 dark:text-blue-200 hover:text-white dark:hover:text-white hover:bg-blue-500 block\"\n          >\n            {heading.style === \"h3\" ? `\u2013 ` : ``}\n            {heading.children.map((child) => child.text).join(\"\")}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport { groq } from \"@sanity/groq-store\";\n\nimport { store } from \"~/lib/sanityGroqStore\";\n\ninterface SubscriptionOptions<R = any> {\n  enabled?: boolean;\n  params?: Record<string, unknown>;\n  initialData?: R;\n}\n\nexport function usePreviewSubscription(\n  query: string,\n  subscriptionOptions: SubscriptionOptions\n) {\n  const { enabled, params, initialData } = subscriptionOptions;\n  const [data, setData] = useState(initialData);\n  let sub: any;\n  let store: any;\n\n  useEffect(() => {\n    if (enabled) {\n      sub = store.subscribe(\n        query,\n        params ?? {}, // Params\n        (err: any, result: any) => {\n          if (err) {\n            console.error(\"Oh no, an error:\", err);\n            return;\n          }\n\n          setData(result);\n        }\n      );\n    }\n\n    return () => {\n      if (sub) sub.unsubscribe();\n      if (store) store.close();\n    };\n  }, []);\n\n  return { data };\n}\n", "import { MetaFunction, LinksFunction, LoaderFunction, useMatches } from \"remix\";\nimport { useLoaderData, Link } from \"remix\";\n\n// import stylesUrl from \"../styles/index.css\";\nimport { getClient } from \"~/lib/sanityServer\";\nimport { homeQuery } from \"~/lib/queries\";\nimport Intro from \"~/components/Intro\";\nimport Date from \"~/components/Date\";\n\nexport const handle = `home`;\n\nexport let meta: MetaFunction = ({ parentsData }) => {\n  const { siteMeta } = parentsData?.root ?? {};\n\n  return {\n    title: `${siteMeta?.title} - ${siteMeta?.description}`,\n    description: siteMeta?.description,\n  };\n};\n\n// export let links: LinksFunction = () => {\n//   return [{ rel: \"stylesheet\", href: stylesUrl }];\n// };\n\nexport let loader: LoaderFunction = async () => {\n  const articles = await getClient().fetch(homeQuery);\n\n  return { articles };\n};\n\nexport default function Index() {\n  let { articles } = useLoaderData();\n  const matches = useMatches();\n  const { bio } =\n    matches?.find((match) => match.handle === \"root\")?.data?.siteMeta ?? {};\n\n  return (\n    <section className=\"mt-48 md:mt-0 col-span-6 md:col-start-6 lg:col-start-8 md:col-span-6 lg:col-span-8\">\n      <div className=\"grid grid-cols-1 gap-y-12 md:gap-y-24 pt-12 md:py-48\">\n        <article className=\"prose prose-lg prose-blue\">\n          <h1>\n            <span className=\"wave\">\uD83D\uDC4B</span> Hey!\n          </h1>\n        </article>\n\n        {bio?.length > 0 ? <Intro blocks={bio} /> : null}\n\n        {articles.map((article) => (\n          <article key={article._id} className=\"grid grid-cols-1 gap-y-4\">\n            <h2 className=\"leading-none font-black tracking-tighter text-2xl md:text-4xl text-blue-500\">\n              <Link\n                to={`/${article.slug}`}\n                prefetch=\"intent\"\n                className=\"block hover:bg-blue-500 hover:text-white\"\n              >\n                {article.title}\n              </Link>\n            </h2>\n            <Date updated={article?.updated} published={article?.published} />\n            <div className=\"prose prose-lg dark:prose-dark prose-blue\">\n              <p>{article.summary}</p>\n            </div>\n          </article>\n        ))}\n      </div>\n    </section>\n  );\n}\n", "import PortableText from \"~/components/PortableText\";\n\nexport default function Intro({ blocks = [] }) {\n  return (\n    <div className=\"bg-blue-500 text-white font-mono md:text-lg p-4 md:p-8 intro\">\n      <PortableText blocks={blocks} />\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,YAAuB;;;ACAvB;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAE3B,mBAA4B;AAEb,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,sBAAe,eAC1B,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAOO;AACP,8BAAuB;AACvB,0BAA4B;;;;;;ACT5B,mBAAkC;AAClC,oBAAqB;AACrB,yBAA4B;;;ACH5B,iBAAiB,CAAE,YAAoC;AACrD,SACE,oCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IACR;AAAA,KAEA,oCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,GAAE;AAAA;AAAA;AAMV,IAAO,kBAAQ;;;ACjBf,gBAAgB,CAAE,YAAoC;AACpD,SACE,oCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IACR;AAAA,KAEA,oCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,GAAE;AAAA;AAAA;AAMV,IAAO,iBAAQ;;;AFLf,IAAM,SAAS,CAAC,CAAE,cAAuC;AACvD,QAAM,CAAE,SAAU,8BAAY;AAC9B,QAAM,cACJ;AACF,QAAM,gBACJ;AAEF,QAAM,CAAE,YAAY,UAAW;AAE/B,SACE,oCAAC,UAAD;AAAA,IAAQ,WAAW;AAAA,KACjB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,oBAAD;AAAA,IACE,IAAG;AAAA,IACH,WAAU;AAAA,KAET,QAGH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MAEf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,QAAO;AAAA,IACP,KAAI;AAAA,KAEJ,oCAAC,iBAAD;AAAA,IAAS,WAAU;AAAA,MACnB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAU,aAE3B,oCAAC,KAAD;AAAA,IACE,WAAW;AAAA,IACX,MAAK;AAAA,IACL,QAAO;AAAA,IACP,KAAI;AAAA,KAEJ,oCAAC,gBAAD;AAAA,IAAQ,WAAU;AAAA,MAClB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAU,YAE3B,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,SAAS,MAAM;AAAA,IACf,WAAW;AAAA,KAEV,aACC,oCAAC,sBAAD;AAAA,IAAS,WAAU;AAAA,OAEnB,oCAAC,uBAAD;AAAA,IAAU,WAAU;AAAA,MAEtB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAW,aAAa,UAAU,QAAO;AAAA;AAQpE,IAAO,iBAAQ;;;AGtEf,yBAA6B;;;ACAtB,IAAM,SAAS;AAAA,EAUpB,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EAOZ,QAAQ;AAAA;;;ADdH,IAAM,eAAe,qCAAa;AAGlC,IAAM,gBAAgB,qCAAa,4BACrC,SADqC;AAAA,EAExC,QAAQ;AAAA;AAKH,IAAM,YAAY,CAAC,aAAa,UACrC,aAAa,gBAAgB;;;AEhB/B,mBAAoC;AACpC,oBAA2B;AAC3B,0BAA4B;AAC5B,2BAAwC;AACxC,0BAA8B;;;ACA9B,qBAAqB,KAAa;AAChC,SAAO,KAAK,MAAM,MAAM,OAAO;AAAA;AAG1B,4BAA4B,UAAU,IAAI;AAC/C,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA;AAKT,QAAM,CAAE,aAAa,cAAe;AACpC,QAAM,cAAc,aAAa;AACjC,QAAM,oBAAoB,cAAc;AACxC,QAAM,aAAc,oBAAoB,cAAe;AAEvD,SAAO,YAAY;AAAA;AAGd,uBACL,SACA,MACA,OACA,GACA;AACA,QAAM,aAAa,IAAI,mBAAmB,WAAW;AAErD,QAAM,UAAU;AAAA,IACd,GAAI,MAAM,UAAW,SAAS,YAAY,MAAM;AAAA,IAChD,GAAI,MAAM,UAAW,UAAU,YAAY,MAAM;AAAA,IACjD,GAAI,MAAM,UAAW,UAAU;AAAA,IAC/B,GAAI,MAAM,UAAW,SAAS;AAAA;AAGhC,SAAO,QAAQ,KAAK;AAAA;;;ACtCtB,uBAA4B;AAG5B,IAAM,CAAE,WAAW,WAAY;AAC/B,IAAM,UAAU,8BAAgB,CAAE,WAAW;AAE9B,wBAAwB,QAAa;AAClD,SAAO,QAAQ,MAAM;AAAA;;;AFgBvB,IAAM,SAAS,MAAM;AAvBrB;AAwBE,QAAM,CAAE,YAAa;AACrB,QAAM,UAAU;AAChB,QAAM,CAAC,QAAQ,aAAa,2BAAS,aAAa;AAClD,QAAM,CAAC,YAAY,iBAAoC,2BAAS;AAChE,QAAM,CAAC,aAAa,kBAAkB,2BAAS;AAC/C,QAAM,CAAE,OAAO,eAAgB;AAE/B,4BAA0B,cAAc,OAAO;AAE7C,UAAM,gBACJ,UAAU,OAAO,gBAAgB,cAC7B,OAAO,SAAS,aAAa,MAC7B;AAEN,UAAM,mBAAmB;AAAA,MACvB,SAAS,CAAE,UAAU;AAAA,MACrB,OAAO,CAAE,OAAO,GAAG,GAAG;AAAA;AAGxB,UAAM,mBAAmB;AAAA,MACvB,SAAS,CAAE,UAAU;AAAA,MACrB,OAAO,CAAE,OAAO,GAAG,GAAG;AAAA;AAGxB,UAAM,mBAAmB;AAAA,MACvB,SAAS,CAAE,UAAU,WAAW,cAAc,IAAI,GAAG,GAAG;AAAA,MACxD,OAAO,CAAE,OAAQ,IAAI,KAAM,IAAI,GAAG,GAAI,MAAM,KAAM;AAAA;AAGpD,UAAM,mBAAmB;AAAA,MACvB,SAAS,CAAE,UAAU,WAAW,cAAc,IAAI,GAAG,GAAG;AAAA,MACxD,OAAO,CAAE,OAAO,GAAG,GAAG;AAAA;AAGxB,UAAM,oBAAoB;AAAA,MACxB,SAAS,CAAE,UAAU,WAAW,cAAc,IAAI,GAAG,GAAG;AAAA,MACxD,OAAO,CAAE,OAAQ,IAAI,KAAM,IAAI,GAAG,GAAI,MAAM,KAAM;AAAA;AAGpD,UAAM,oBAAoB;AAAA,MACxB,SAAS,CAAE,UAAU,WAAW,cAAc,IAAI,GAAG,GAAG;AAAA,MACxD,OAAO,CAAE,OAAO,GAAG,GAAG;AAAA;AAGxB,YAAQ;AAAA,WACD,gBAAe,OAAO,cAAc;AACvC,sBAAc,gBAAgB,mBAAmB;AACjD;AAAA,WACG,eAAe;AAClB,sBAAc,gBAAgB,oBAAoB;AAClD;AAAA;AAEA,sBAAc,gBAAgB,mBAAmB;AACjD;AAAA;AAAA;AAKN,8BAAU,MAAM;AAlFlB;AAmFI,QAAI,QAAQ,QAAQ;AAClB,YAAM,eAAe,eAAQ,KAAK,CAAC,UACjC,aAAa,MAAM,MAAM,WAAW,SAAS,MAAM,WAAW,eAD3C,oBAElB;AAEH,UAAI,cAAc;AAChB,cAAM,QACJ,aAAa,MACT,6CAAc,SAAS,GAAG,QAC1B,oDAAc,gBAAd,oBAA2B;AACjC,YAAI,OAAO;AACT,yBAAe;AAAA;AAAA;AAAA;AAAA,KAIpB,CAAC;AAGJ,8BAAU,MAAM;AACd,QAAI,OAAO,WAAW,aAAa;AACjC;AAEA,aAAO,iBAAiB,UAAU,MAAM;AAAA;AAAA,KAEzC;AAGH,8BAAU,MAAM;AACd,UAAM,iBAAiB,aAAa;AACpC,cAAU;AACV,qBAAiB;AAAA,KAChB,CAAC,UAAU;AAEd,MAAI,CAAC;AAAa,WAAO;AAEzB,SAGE,oCAAC,4BAAO,KAAR;AAAA,IACE,SAAS,4BAAK,WAAW,UAAhB,CAAyB,SAAS;AAAA,IAC3C,YAAY,CAAE,UAAU;AAAA,IACxB,WAAW,gFACT,SAAS,UAAU;AAAA,KAGpB,eACC,oCAAC,4BAAO,KAAR;AAAA,IACE,WAAU;AAAA,IACV,SAAS,aAAE,SAAS,IAAM,WAAW;AAAA,IACrC,SAAS,aAAE,SAAS,IAAM,WAAW;AAAA,IACrC,MAAM,aAAE,SAAS,IAAM,WAAW;AAAA,IAClC,YAAY,CAAE,UAAU;AAAA,KAEvB,eACC,oCAAC,sCAAD,MACE,oCAAC,4BAAO,KAAR;AAAA,IACE,KAAK,iDAAa,UAAb,mBAAoB;AAAA,IACzB,KAAK,eAAe,aACjB,OAAO,MACP,MAAM,KACN;AAAA,IACH,KAAK,iDAAa,YAAb,YAAwB;AAAA,IAC7B,WAAU;AAAA,IACV,SAAS,CAAE,SAAS;AAAA,IACpB,SAAS,CAAE,SAAS;AAAA,IACpB,MAAM,CAAE,SAAS;AAAA;AAAA;AAYjC,IAAO,iBAAQ;;;AGhKA,gBAAgB;AAC7B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA;AAAA;;;AClBrB,wBAAqB;AAEd,IAAM,gBAAgB;AAEtB,IAAM,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAerB,IAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AVElB,IAAM,SAAS;AAEf,IAAI,QAAuB,MAAM;AACtC,SAAO,CAAC,CAAE,KAAK,cAAc,MAAM;AAAA;AAG9B,IAAI,SAAyB,OAAO,CAAE,YAAa;AACxD,QAAM,WAAW,MAAM,YAAY,MAAM;AAEzC,SAAO,CAAE;AAAA;AAGX,kBAAkB;AAAA,EAChB;AAAA,EACA;AAAA,GAIC;AACD,QAAM,CAAE,cAAe;AACvB,QAAM,OAAO;AAEb,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,QAAD;AAAA,IAAM,SAAQ;AAAA,MACd,oCAAC,QAAD;AAAA,IAAM,KAAI;AAAA,IAAO,MAAK;AAAA,IAAe,MAAK;AAAA,MAO1C,oCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,SAAQ;AAAA,MAET,QAAQ,oCAAC,SAAD,MAAQ,SAAiB,MAClC,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD;AAAA,IACE,WAAW,2CACT,aAAa,gCAAgC;AAAA,KAG9C,UAED,oCAAC,uBAAD,OACC,QAAQ,IAAI,aAAa,iBAAiB,oCAAC,MAAD,OAC1C,QAAQ,IAAI,aAAa,iBAAiB,oCAAC,0BAAD;AAAA;AAMpC,eAAe;AAC5B,MAAI,OAAO;AACX,QAAM,CAAE,YAAa;AAErB,SACE,oCAAC,UAAD,MACE,oCAAC,gBAAD;AAAA,IAAQ;AAAA,MACR,oCAAC,gBAAD,OACA,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,gCAAD;AAAA;AAMD,yBAAyB;AAC9B,MAAI,SAAS;AAEb,UAAQ,OAAO;AAAA,SACR;AAAA,SACA;AACH,aACE,oCAAC,UAAD;AAAA,QAAU,OAAO,GAAG,OAAO,UAAU,OAAO;AAAA,SAC1C,oCAAC,MAAD,MACG,OAAO,QAAO,KAAE,OAAO;AAAA;AAM9B,YAAM,IAAI,MACR,2CAA2C,OAAO;AAAA;AAAA;AAKnD,uBAAuB,CAAE,QAA2B;AACzD,UAAQ,MAAM;AAEd,SACE,oCAAC,UAAD;AAAA,IAAU,OAAM;AAAA,KACd,oCAAC,MAAD,MAAI,cACJ,oCAAC,OAAD,MAAM,MAAM,UACZ,oCAAC,KAAD,MAAG;AAAA;;;AWxHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAA8B;;;ACD9B,oBAAkB;AAClB,oCAAyB;AACzB,4BAAyB;;;ACFzB,+BAAqB;AAiBrB,IAAM,SAAS,CAAC;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,MACW;AACX,MAAI,SAAS,UAAU;AACrB,WACE,oCAAC,UAAD;AAAA,MACE;AAAA,MACA,WAAW,UAAU,aAAa;AAAA,MAClC,MAAK;AAAA,OAEL,oCAAC,QAAD;AAAA,MAAM,WAAU;AAAA,OAAQ;AAAA;AAM9B,QAAM,aAAyB;AAC/B,MAAI,WAAW,UAAU;AACvB,eAAW,SAAS;AACpB,eAAW,MAAM;AAAA;AAGnB,MAAI,MAAM;AACR,WACE,oCAAC,KAAD,4BAAO,aAAP;AAAA,MAAmB,WAAW,UAAU,aAAa;AAAA,MAAM;AAAA,QACzD,oCAAC,QAAD;AAAA,MAAM,WAAU;AAAA,QAChB,oCAAC,QAAD;AAAA,MAAM,WAAU;AAAA,OAAQ,WACxB,oCAAC,QAAD;AAAA,MAAM,WAAU;AAAA;AAAA;AAKtB,SACE,oCAAC,+BAAD;AAAA,IAAM,WAAW,UAAU,aAAa;AAAA,IAAM;AAAA,KAC3C;AAAA;AAKP,IAAO,iBAAQ;;;AC9Df,kCAAwC;AACxC,oBAAmB;AAEJ,eAAe,CAAE,OAAO,IAAI,WAAW,cAAe;AACnE,SACE,oCAAC,qCAAD,4BAAe,2CAAf;AAAA,IAA6B;AAAA,IAAY;AAAA,IAAoB,OAAO;AAAA,MACjE,CAAC,CAAE,WAAW,OAAO,QAAQ,cAAc,mBAC1C,oCAAC,OAAD;AAAA,IAAK;AAAA,IAAsB;AAAA,KACxB,OAAO,IAAI,CAAC,MAAM,MACjB,oCAAC,OAAD,gBAAS,aAAa,CAAE,MAAM,KAAK,MAChC,KAAK,IAAI,CAAC,OAAO,QAChB,oCAAC,QAAD,gBAAU,cAAc,CAAE,OAAO;AAAA;;;AFFjD,IAAM,CAAE,uBAAW,qBAAY;AAE/B,IAAM,gBAAgB,CAAC,UAAU;AAXjC;AAYE,QAAM,CAAE,QAAQ,YAAa,MAAM;AAEnC,MAAI,OAAO,KAAK,QAAQ;AACtB,WAAO,sBAAM,cAAc,OAAO,CAAE,IAAI,MAAM,KAAK,OAAQ,MAAM;AAAA;AAGnE,MAAI,CAAC,QAAQ,OAAO,SAAS,QAAQ;AACnC,UAAM,OAAO,qCAAO,SAAP,mBAAa,SAAS,IAAI,CAAC,CAAE,iBAAW,OAAM,KAAK;AAChE,WAAO,OAAO,oDAAC,OAAD;AAAA,MAAO,MAAM;AAAA,SAAW;AAAA;AAGxC,SAAO,sCAAa,mBAAmB,MAAM,MAAM;AAAA;AAGrD,IAAM,cAAc;AAAA,EAClB,WAAW,CAAC,CAAE,cAAe;AAAA,EAC7B,OAAO;AAAA,IACL,OAAO;AAAA,IACP,OAAO,CAAC,CAAE,UAAW;AA9BzB;AA+BM,YAAM,KAAK,mCAAa,KAAK;AAI7B,aACE,oDAAC,KAAD;AAAA,QAAG,MAAM,KAAK;AAAA,QAAK,QAAO;AAAA,QAAS,KAAI;AAAA,SACrC,oDAAC,OAAD;AAAA,QACE,KAAK,0BAA0B;AAAA,QAC/B,SAAQ;AAAA,QACR,KAAK,mCAAM,UAAN,YAAe;AAAA,QACpB,WAAU;AAAA;AAAA;AAAA,IAKlB,OAAO,MAAM,oDAAC,MAAD;AAAA,IACb,OAAO,CAAC,CAAE,UAAQ;AA/CtB;AAgDM,iEAAC,KAAD;AAAA,QAAG,WAAU;AAAA,SACX,oDAAC,OAAD;AAAA,QACE,SAAQ;AAAA,QACR,KAAK,eAAe,KAAK,OAAO,MAAM,KAAK;AAAA,QAC3C,KAAK,mCAAM,UAAN,mBAAa;AAAA,QAClB,WAAU;AAAA;AAAA;AAAA,IAIhB,MAAM,CAAC,CAAE,UACP,8BAAM,QAAO,oDAAC,OAAD;AAAA,MAAO,MAAM,KAAK;AAAA,MAAM,UAAU,6BAAM;AAAA,SAAe;AAAA,IACtE,QAAQ,CAAC,CAAE,UACT,oDAAC,gBAAD;AAAA,MAAQ,MAAM,KAAK,KAAK;AAAA,OAAO,KAAK,KAAK;AAAA;AAAA;AAKhC,sBAAsB,CAAE,SAAU;AAC/C,SACE,oDAAC,uCAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX,SAAS;AAAA;AAAA;;;AG9DA,uBAAuB,CAAE,SAAS,KAAM;AAGrD,QAAM,cAAc,OAAO,OACzB,CAAC,KAAK,SAAS;AACb,UAAM,UAAU,IAAI,SAAS;AAE7B,QAEE,IAAI,SAAS,WAAW,KAExB,IAAI,SAAS,GAAG,UAAU,KAAK,OAC/B;AACA,UAAI,SAAS,KAAK;AAAA,WACb;AAEL,UAAI,KAAK,CAAC;AAAA;AAGZ,WAAO;AAAA,KAET,CAAC;AAGH,MAAI,CAAC,4CAAa;AAAQ,WAAO;AAEjC,SACE,0DACG,YAAY,IAAI,CAAC,UAChB,MAAM,GAAG,UAAU,UACjB,oCAAC,OAAD;AAAA,IACE,KAAK,MAAM,GAAG;AAAA,IACd,WAAU;AAAA,KAEV,oCAAC,cAAD;AAAA,IAAc,QAAQ;AAAA,QAGxB,oCAAC,cAAD;AAAA,IAAc,KAAK,MAAM,GAAG;AAAA,IAAM,QAAQ;AAAA;AAAA;;;AC9CpD,oBAAkB;AAEH,eAAe,CAAE,WAA2C;AACzE,SACE,oDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV;AAAA;;;ACLP,oBAAkB;AAIH,cAAc;AAAA,EAC3B;AAAA,EACA;AAAA,GAIC;AACD,SACE,oDAAC,OAAD,MACE,oDAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,UACC,oDAAC,QAAD,MAAM,YACK,SAAS,KAClB,oDAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAa,iBAAc,cAG7C,oDAAC,QAAD,MAAO;AAAA;;;ACVF,yBAAyB,CAAE,SAA+B;AACvE,QAAM,WAAW,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,MAAM,SAAS,MAAM;AAEtE,MAAI,CAAC,sCAAU,SAAQ;AACrB,WAAO;AAAA;AAGT,SACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,SAAS,IAAI,CAAC,YACb,oCAAC,MAAD;AAAA,IACE,KAAK,QAAQ;AAAA,IACb,WAAW,QAAQ,UAAU,OAAO,SAAS;AAAA,IAC7C,OAAO,CAAE,YAAY,QAAQ,UAAU,OAAO,aAAa;AAAA,KAE3D,oCAAC,KAAD;AAAA,IACE,MAAM,IAAI,QAAQ;AAAA,IAClB,WAAU;AAAA,KAET,QAAQ,UAAU,OAAO,YAAO,IAChC,QAAQ,SAAS,IAAI,CAAC,UAAU,MAAM,MAAM,KAAK;AAAA;;;AC9B9D,oBAAoC;AAW7B,gCACL,OACA,qBACA;AACA,QAAM,CAAE,SAAS,QAAQ,eAAgB;AACzC,QAAM,CAAC,MAAM,WAAW,4BAAS;AACjC,MAAI;AACJ,MAAI;AAEJ,+BAAU,MAAM;AACd,QAAI,SAAS;AACX,YAAM,MAAM,UACV,OACA,0BAAU,IACV,CAAC,KAAU,WAAgB;AACzB,YAAI,KAAK;AACP,kBAAQ,MAAM,oBAAoB;AAClC;AAAA;AAGF,gBAAQ;AAAA;AAAA;AAKd,WAAO,MAAM;AACX,UAAI;AAAK,YAAI;AACb,UAAI;AAAO,cAAM;AAAA;AAAA,KAElB;AAEH,SAAO,CAAE;AAAA;;;AR7BJ,IAAM,UAAS;AAEf,IAAI,OAAqB,CAAC,CAAE,MAAM,aAAa,cAAe;AAfrE;AAgBE,QAAM,CAAE,OAAO,SAAS,SAAU,mCAAM,gBAAN,YAAqB;AACvD,QAAM,CAAE,YAAa,iDAAa,SAAb,YAAqB;AAC1C,QAAM,YAAY,sCAAU,WAAU,SAAS;AAC/C,QAAM,aAAa;AACnB,QAAM,cAAc;AAEpB,QAAM,YAAY,QACd;AAAA,IACE,kBAAkB,QAAQ,OAAO,cAAc;AAAA,IAC/C,mBAAmB,QAAQ,OAAO,eAAe;AAAA,IACjD,YAAY,QACR,eAAe,OACZ,OAAO,aACP,MAAM,YACN,aACH;AAAA,MAEN;AAEJ,SAAO;AAAA,IACL,eAAe;AAAA,IACf,OAAO,GAAG,WAAW,qCAAU;AAAA,IAC/B,aAAa;AAAA,IACb;AAAA,IACA,gBAAgB;AAAA,IAChB,mBAAmB,qCAAU;AAAA,IAC7B,iBAAiB;AAAA,IACjB,uBAAuB,qCAAU;AAAA,IACjC,MAAM;AAAA,IACN,UAAU;AAAA,KACP;AAAA;AASA,IAAI,UAAyB,OAAO,CAAE,YAAa;AACxD,QAAM,UAAU;AAChB,QAAM,UAAU,MAAM,UAAU,SAAS,MAAM,cAAc;AAE7D,SAAO,CAAE,aAAa,SAAS,OAAO,cAAc,QAAQ;AAAA;AAI/C,mBAAmB;AA/DlC;AAgEE,MAAI,CAAE,aAAa,OAAO,QAAQ,WAAY;AAE9C,QAAM,CAAE,MAAM,WAAY,uBAAuB,OAAO;AAAA,IACtD;AAAA,IACA;AAAA,IACA,SAAS;AAAA;AAGX,SACE,0DACE,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAChB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,QAAQ,QAEX,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,QAAQ,YAIf,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KACd,0CAAS,YAAT,mBAAkB,UAAS,IAC1B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD,MAAO,sBACP,oCAAC,iBAAD;AAAA,IAAiB,QAAQ,QAAQ;AAAA,QAEjC,OAEN,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACjB,oCAAC,MAAD;AAAA,IAAM,SAAS,mCAAS;AAAA,IAAS,WAAW,mCAAS;AAAA,MACpD,0CAAS,YAAT,mBAAkB,UAAS,IAC1B,oCAAC,eAAD;AAAA,IAAe,QAAQ,QAAQ;AAAA,OAC7B;AAAA;;;AShGZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwE;AACxE,oBAAoC;;;ACCrB,eAAe,CAAE,SAAS,KAAM;AAC7C,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,cAAD;AAAA,IAAc;AAAA;AAAA;;;ADIb,IAAM,UAAS;AAEf,IAAI,QAAqB,CAAC,CAAE,iBAAkB;AAXrD;AAYE,QAAM,CAAE,YAAa,iDAAa,SAAb,YAAqB;AAE1C,SAAO;AAAA,IACL,OAAO,GAAG,qCAAU,WAAW,qCAAU;AAAA,IACzC,aAAa,qCAAU;AAAA;AAAA;AAQpB,IAAI,UAAyB,YAAY;AAC9C,QAAM,WAAW,MAAM,YAAY,MAAM;AAEzC,SAAO,CAAE;AAAA;AAGI,iBAAiB;AA9BhC;AA+BE,MAAI,CAAE,YAAa;AACnB,QAAM,UAAU;AAChB,QAAM,CAAE,OACN,qDAAS,KAAK,CAAC,UAAU,MAAM,WAAW,YAA1C,mBAAmD,SAAnD,mBAAyD,aAAzD,YAAqE;AAEvE,SACE,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACjB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,WAAD;AAAA,IAAS,WAAU;AAAA,KACjB,oCAAC,MAAD,MACE,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAO,cAAS,WAInC,4BAAK,UAAS,IAAI,oCAAC,OAAD;AAAA,IAAO,QAAQ;AAAA,OAAU,MAE3C,SAAS,IAAI,CAAC,YACb,oCAAC,WAAD;AAAA,IAAS,KAAK,QAAQ;AAAA,IAAK,WAAU;AAAA,KACnC,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACZ,oCAAC,oBAAD;AAAA,IACE,IAAI,IAAI,QAAQ;AAAA,IAChB,UAAS;AAAA,IACT,WAAU;AAAA,KAET,QAAQ,SAGb,oCAAC,MAAD;AAAA,IAAM,SAAS,mCAAS;AAAA,IAAS,WAAW,mCAAS;AAAA,MACrD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD,MAAI,QAAQ;AAAA;;;AvBvD1B,oBAAkC;AAC3B,IAAM,QAAQ,CAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,gBAAgB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,gBAAgB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}

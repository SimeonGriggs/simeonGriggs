{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/Users/simeongriggs/Sites/simeonGriggs/remix/app/root.tsx", "../app/lib/utils/env.ts", "../app/lib/utils/scroll.tsx", "../app/lib/helpers.ts", "../app/lib/sanityServer.tsx", "../app/lib/sanityConfig.ts", "../app/lib/queries.tsx", "../app/components/Banner.tsx", "../app/lib/sanityImageUrl.ts", "../app/components/Grid.tsx", "../app/components/Header.tsx", "../app/components/Twitter.tsx", "../app/components/GitHub.tsx", "route-module:/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/$slug.tsx", "../app/components/PortableText.tsx", "../app/components/Button.tsx", "../app/components/Prism.tsx", "../app/components/ProseableText.tsx", "../app/components/Label.tsx", "../app/components/Date.tsx", "../app/components/TableOfContents.tsx", "../app/hooks/usePreviewSubscription.tsx", "route-module:/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/index.tsx", "../app/components/Intro.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/root.tsx\";\nimport * as route1 from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/$slug.tsx\";\nimport * as route2 from \"/Users/simeongriggs/Sites/simeonGriggs/remix/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/$slug\": {\n    id: \"routes/$slug\",\n    parentId: \"root\",\n    path: \":slug\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route2\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import ReactDOMServer from 'react-dom/server'\nimport type {EntryContext} from 'remix'\nimport {RemixServer} from 'remix'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = ReactDOMServer.renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import {\n  LinksFunction,\n  LoaderFunction,\n  useMatches,\n  Meta,\n  Links,\n  Scripts,\n  useLoaderData,\n  LiveReload,\n  useCatch,\n} from 'remix'\n\nimport {Outlet} from 'react-router-dom'\nimport {useDarkMode} from 'usehooks-ts'\n\n// import {removeTrailingSlash} from './lib/helpers'\nimport {getEnv} from './lib/utils/env'\nimport {RestoreScrollPosition, useScrollRestoration} from '~/lib/utils/scroll'\nimport {getClient} from '~/lib/sanityServer'\nimport {siteMetaQuery} from '~/lib/queries'\nimport Banner from '~/components/Banner'\nimport Grid from '~/components/Grid'\nimport Header from '~/components/Header'\nimport stylesUrl from '~/styles/global.css'\n\nexport const handle = `root`\n\nexport const links: LinksFunction = () => {\n  return [{rel: 'stylesheet', href: stylesUrl}]\n}\n\nexport const loader: LoaderFunction = async () => {\n  const siteMeta = await getClient().fetch(siteMetaQuery)\n\n  return {siteMeta, ENV: getEnv()}\n}\n\nfunction Document({children, title}: {children: React.ReactNode; title: string}) {\n  const {isDarkMode} = useDarkMode()\n  const {ENV} = useLoaderData()\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <link rel=\"icon\" href=\"/favicon.png\" type=\"image/png\" />\n        {/* <link\n          rel=\"canonical\"\n          href={removeTrailingSlash(\n            `${data.requestInfo.origin}${data.requestInfo.path}`\n          )}\n        /> */}\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,viewport-fit=cover\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body\n        className={`transition-colors duration-100 ease-out ${\n          isDarkMode ? `dark text-white bg-blue-900` : ``\n        }`}\n      >\n        {children}\n        <RestoreScrollPosition />\n        <Scripts />\n        {ENV.NODE_ENV === 'development' && (\n          <>\n            <Grid />\n            <LiveReload />\n          </>\n        )}\n      </body>\n    </html>\n  )\n}\n\nexport default function App() {\n  const data = useLoaderData()\n  const matches = useMatches()\n\n  const {siteMeta} = data\n\n  const shouldManageScroll = matches.every((m) => (m.handle as any)?.scroll !== false)\n  useScrollRestoration(shouldManageScroll)\n\n  return (\n    <Document title={siteMeta?.title}>\n      <Header siteMeta={siteMeta} />\n      <Banner />\n      <main className=\"px-4 md:px-0 grid grid-cols-6 md:grid-cols-12 lg:grid-cols-16 min-h-screen w-screen\">\n        <Outlet />\n      </main>\n    </Document>\n  )\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch()\n\n  switch (caught.status) {\n    case 401:\n    case 404:\n      return (\n        <Document title={`${caught.status} ${caught.statusText}`}>\n          <h1>\n            {caught.status} {caught.statusText}\n          </h1>\n        </Document>\n      )\n\n    default:\n      throw new Error(`Unexpected caught response with status: ${caught.status}`)\n  }\n}\n\nexport function ErrorBoundary({error}: {error: Error}) {\n  console.error(error)\n\n  return (\n    <Document title=\"Uh-oh!\">\n      <h1>App Error</h1>\n      <pre>{error.message}</pre>\n      <p>Replace this UI with what you want users to see when your app throws uncaught errors.</p>\n    </Document>\n  )\n}\n", "export function getEnv() {\n  return {\n    FLY: process.env.FLY,\n    NODE_ENV: process.env.NODE_ENV,\n  }\n}\n\ntype ENV = ReturnType<typeof getEnv>\n\n// App puts these on\ndeclare global {\n  // eslint-disable-next-line\n  var ENV: ENV\n  interface Window {\n    ENV: ENV\n  }\n}\n", "import * as React from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {useTransition} from '@remix-run/react'\nimport {useBeforeUnload} from 'remix'\n\nimport {useSSRLayoutEffect} from '../helpers'\n\nlet firstRender = true\nlet positions: {[key: string]: number} = {}\nconst SESSION_STORAGE_KEY = 'kody_scroll_positions'\n\nif (typeof window !== 'undefined') {\n  try {\n    positions = JSON.parse(sessionStorage.getItem(SESSION_STORAGE_KEY) ?? '{}')\n  } catch {\n    sessionStorage.removeItem(SESSION_STORAGE_KEY)\n  }\n}\n\n// shouldn't have to do it this way\n// https://github.com/remix-run/remix/issues/240\ntype LocationState = undefined | {isSubmission: boolean}\nexport function useScrollRestoration(enabled: boolean = true) {\n  const location = useLocation()\n  const latestLocationRef = React.useRef(location)\n  React.useEffect(() => {\n    latestLocationRef.current = location\n  }, [location])\n  const isSubmission = (location.state as LocationState)?.isSubmission ?? false\n  const transition = useTransition()\n  const hash = typeof window === 'undefined' ? location.hash : window.location.hash\n\n  React.useEffect(() => {\n    if (transition.location) {\n      positions[location.key] = window.scrollY\n    }\n  }, [transition, location])\n\n  useBeforeUnload(\n    React.useCallback(() => {\n      positions[latestLocationRef.current.key] = window.scrollY\n      sessionStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(positions))\n    }, [])\n  )\n\n  useSSRLayoutEffect(() => {\n    if (!enabled) return\n    if (transition.state !== 'idle') return\n    if (isSubmission) return\n    // don't restore scroll on initial render\n    if (firstRender) {\n      firstRender = false\n      return\n    }\n\n    if (hash) {\n      const el = document.getElementById(hash.slice(1))\n      if (el) {\n        el.scrollIntoView({behavior: 'smooth'})\n        return\n      }\n    }\n\n    const y = positions[location.key]\n    window.scrollTo(0, y ?? 0)\n  }, [transition.state, location.key, hash, positions, isSubmission])\n}\n\nexport function RestoreScrollPosition() {\n  return (\n    <script\n      // restore scroll position ASAP:\n      // doing it inline like this means scroll position will happen before the page is hyrdated\n      // (or even if it's not).\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: `\n// yo, this code here ensures that you have a most excellent scroll management\n// experience on the site. It's inline to make sure your scroll position is\n// restored asap when refreshing or navigating back to the site using the back button\nwindow.history.scrollRestoration = 'manual'\ntry {\n  const positions = JSON.parse(sessionStorage.getItem(${JSON.stringify(\n    SESSION_STORAGE_KEY\n  )}) ?? '{}')\n  if (window.history.state.key) {\n    const storedY = positions[window.history.state.key]\n    if (typeof storedY === 'number') {\n      window.scrollTo(0, storedY)\n    }\n  } else {\n    // we want to make sure there's a key so the position can be associated\n    // with the key and restored if they leave and come back.\n    window.history.replaceState({key: Date.now()}, null)\n  }\n} catch {\n  sessionStorage.removeItem('positions')\n}\n    `,\n      }}\n    />\n  )\n}\n", "import {useLayoutEffect} from 'react'\n\nexport function removeTrailingSlash(s: string) {\n  return s.endsWith('/') ? s.slice(0, -1) : s\n}\n\nfunction twoDecimals(num: number) {\n  return Math.round(num * 100) / 100\n}\n\nexport function heightColumnOffset(columns = 16) {\n  if (typeof window === 'undefined') {\n    return 0\n  }\n\n  // Clip paths need to be % based, but I want the y-size to match the width\n  // So, what % of the window HEIGHT, is ONE COLUMN of the WIDTH?\n  const {innerHeight, innerWidth} = window\n  const widthColumn = innerWidth / columns\n  const heightMinusColumn = innerHeight - widthColumn\n  const heightPerc = (heightMinusColumn / innerHeight) * 100\n\n  return twoDecimals(heightPerc)\n}\n\nexport function clipPathInset(columns: number, left: number, right: number, y: number) {\n  const heightPerc = y ? heightColumnOffset(columns) : 100\n\n  const corners = [\n    `${(100 / columns) * left}% ${twoDecimals(100 - heightPerc)}%`,\n    `${(100 / columns) * right}% ${twoDecimals(100 - heightPerc)}%`,\n    `${(100 / columns) * right}% ${heightPerc}%`,\n    `${(100 / columns) * left}% ${heightPerc}%`,\n  ]\n\n  return corners.join(',')\n}\n\n// eslint-disable-next-line no-empty-function\nexport const useSSRLayoutEffect = typeof window === 'undefined' ? () => {} : useLayoutEffect\n", "import {createClient} from 'next-sanity'\n\nimport {config} from './sanityConfig'\n\n// Set up the client for fetching data in the getProps page functions\nexport const sanityClient = createClient(config)\n\n// Set up a preview client with serverless authentication for drafts\nexport const previewClient = createClient({\n  ...config,\n  useCdn: false,\n  // token: process?.env?.SANITY_API_TOKEN,\n})\n\n// Helper function for easily switching between normal client and preview client\nexport const getClient = (usePreview = false) => (usePreview ? previewClient : sanityClient)\n", "export const config = {\n  /**\n   * Find your project ID and dataset in `sanity.json` in your studio project.\n   * These are considered \u201Cpublic\u201D, but you can use environment variables\n   * if you want differ between local dev and production.\n   *\n   * https://nextjs.org/docs/basic-features/environment-variables\n   **/\n  // dataset: process.env.NEXT_PUBLIC_SANITY_DATASET || \"production\",\n  // projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID || \"az8av6xl\",\n  dataset: 'production',\n  projectId: 'az8av6xl',\n  apiVersion: '2021-03-25',\n  /**\n   * Set useCdn to `false` if your application require the freshest possible\n   * data always (potentially slightly slower and a bit more expensive).\n   * Authenticated request (like preview) will always bypass the CDN\n   **/\n  // useCdn: process.env.NODE_ENV === \"production\",\n  useCdn: true,\n}\n", "import {groq} from '@sanity/groq-store'\n\nexport const siteMetaQuery = groq`*[_id == \"siteMeta\"][0]`\n\nexport const articleQuery = groq`*[_type == \"article\" && slug.current == $slug][0]{\n    ...,\n    image {\n      ...,\n      asset->\n    },\n    content[] {\n        ...,\n        _type == \"image\" => {\n            ...,\n            asset->\n        },\n    }\n  }`\n\nexport const homeQuery = groq`*[_type == \"article\" && defined(slug.current)]|order(published desc){\n    _id,\n    title,\n    \"slug\": slug.current,\n    published,\n    updated,\n    summary,\n    image {\n      ...,\n      asset->\n    }\n  }`\n", "import {useState, useEffect} from 'react'\nimport {useMatches} from 'remix'\nimport {useLocation} from 'react-router'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useWindowSize} from 'usehooks-ts'\n\nimport {clipPathInset} from '../lib/helpers'\nimport sanityImageUrl from '~/lib/sanityImageUrl'\n\ninterface BannerSizeImage {\n  scale: number\n  x: number\n}\n\ninterface BannerSizeWrapper {\n  clipPath: string\n}\n\ninterface BannerSize {\n  image?: BannerSizeImage\n  wrapper?: BannerSizeWrapper\n}\n\nconst Banner = () => {\n  const {pathname} = useLocation()\n  const matches = useMatches()\n  const [isHome, setIsHome] = useState(pathname === '/')\n  const [bannerSize, setBannerSize]: [BannerSize, any] = useState({})\n  const [bannerImage, setBannerImage] = useState(null)\n  const {width: windowWidth} = useWindowSize()\n\n  function updateBannerSize(useHomeSize = false) {\n    // Double check, if no prop was given we should double check\n    const checkHomeSize =\n      window && typeof useHomeSize === 'undefined' ? window.location.pathname === '/' : useHomeSize\n\n    const bannerHomeMobile = {\n      wrapper: {clipPath: `polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)`},\n      image: {scale: 1, x: 0},\n    }\n\n    const bannerPostMobile = {\n      wrapper: {clipPath: `polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)`},\n      image: {scale: 1, x: 0},\n    }\n\n    const bannerHomeTablet = {\n      wrapper: {clipPath: `polygon(${clipPathInset(12, 1, 4, 1)})`},\n      image: {scale: (1 / 12) * 10, x: `${(100 / 12) * 2}%`},\n    }\n\n    const bannerPostTablet = {\n      wrapper: {clipPath: `polygon(${clipPathInset(12, 0, 1, 0)})`},\n      image: {scale: 1, x: `-10%`},\n    }\n\n    const bannerHomeDesktop = {\n      wrapper: {clipPath: `polygon(${clipPathInset(16, 1, 6, 1)})`},\n      image: {scale: (1 / 16) * 15, x: `${(100 / 16) * 2}%`},\n    }\n\n    const bannerPostDesktop = {\n      wrapper: {clipPath: `polygon(${clipPathInset(16, 0, 3, 0)})`},\n      image: {scale: 1, x: `-20%`},\n    }\n\n    switch (true) {\n      case windowWidth >= 768 && windowWidth < 1024:\n        setBannerSize(checkHomeSize ? bannerHomeTablet : bannerPostTablet)\n        break\n      case windowWidth >= 1024:\n        setBannerSize(checkHomeSize ? bannerHomeDesktop : bannerPostDesktop)\n        break\n      default:\n        setBannerSize(checkHomeSize ? bannerHomeMobile : bannerPostMobile)\n        break\n    }\n  }\n\n  // Set initial banner\n  useEffect(() => {\n    if (matches.length) {\n      const thisPathData = matches.find((match: any) =>\n        pathname === '/' ? match.handle === 'home' : match.handle === 'article'\n      )?.data\n\n      if (thisPathData) {\n        const image =\n          pathname === '/' ? thisPathData?.articles[0].image : thisPathData?.initialData?.image\n\n        if (image) {\n          setBannerImage(image)\n        }\n      }\n    }\n  }, [matches, pathname])\n\n  // Update banner size on resize\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      updateBannerSize()\n\n      window.addEventListener('resize', () => updateBannerSize())\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // Update banner size when path changes\n  useEffect(() => {\n    const locationIsHome = pathname === '/'\n    setIsHome(locationIsHome)\n    updateBannerSize(locationIsHome)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname, windowWidth])\n\n  if (!windowWidth) return null\n\n  return (\n    <motion.div\n      animate={{...bannerSize.wrapper, opacity: 1}}\n      transition={{duration: 0.4}}\n      className={`pointer-events-none h-32 md:h-screen opacity-0 w-screen z-40 origin-top-left ${\n        isHome ? `fixed` : `absolute md:fixed`\n      }`}\n    >\n      {bannerImage && (\n        <motion.div\n          className=\"absolute inset-0 h-32 md:h-screen md:right-auto md:w-4/12 lg:w-6/16 bg-blue-500\"\n          initial={{opacity: 0, ...bannerSize.image}}\n          animate={{opacity: 1, ...bannerSize.image}}\n          exit={{opacity: 0, ...bannerSize.image}}\n          transition={{duration: 0.2}}\n        >\n          {bannerImage && (\n            <AnimatePresence>\n              <motion.img\n                key={[`mobile`, bannerImage?.asset?._id].join('-')}\n                src={sanityImageUrl(bannerImage).height(800).width(300).toString()}\n                alt={bannerImage?.altText ?? null}\n                className=\"md:hidden w-full h-full object-cover\"\n                initial={{opacity: 0}}\n                animate={{opacity: 1}}\n                exit={{opacity: 0}}\n              />\n              <motion.img\n                key={[`desktop`, bannerImage?.asset?._id].join('-')}\n                src={sanityImageUrl(bannerImage).height(1200).width(600).toString()}\n                alt={bannerImage?.altText ?? null}\n                className=\"hidden md:block w-full h-full object-cover\"\n                initial={{opacity: 0}}\n                animate={{opacity: 1}}\n                exit={{opacity: 0}}\n              />\n            </AnimatePresence>\n          )}\n        </motion.div>\n      )}\n    </motion.div>\n  )\n}\n\nexport default Banner\n", "import imageUrlBuilder from '@sanity/image-url'\nimport {config} from './sanityConfig'\n\nconst {projectId, dataset} = config\nconst builder = imageUrlBuilder({projectId, dataset})\n\nexport default function sanityImageUrl(source: any) {\n  return builder.image(source)\n}\n", "export default function Grid() {\n  return (\n    <div className=\"pointer-events-none fixed inset-0 w-screen h-screen grid grid-cols-6 md:grid-cols-12 lg:grid-cols-16\">\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden md:block\" />\n      <div className=\"border-r border-red-500 hidden lg:block\" />\n      <div className=\"border-r border-red-500 hidden lg:block\" />\n      <div className=\"border-r border-red-500 hidden lg:block\" />\n      <div className=\"border-red-500 hidden lg:block\" />\n    </div>\n  )\n}\n", "/* eslint-disable react/jsx-filename-extension */\nimport {MoonIcon, SunIcon} from '@heroicons/react/solid'\nimport {Link} from 'remix'\nimport {useDarkMode} from 'usehooks-ts'\n\nimport Twitter from './Twitter'\nimport GitHub from './GitHub'\n\ninterface SiteMeta {\n  title: string\n}\n\nconst Header = ({siteMeta}: {siteMeta: SiteMeta}) => {\n  const {title} = siteMeta ?? {}\n  const menuClasses =\n    'fixed text-sm z-50 inset-0 bottom-auto md:bottom-0 md:right-auto md:w-1/12 lg:w-1/16 flex items-center justify-center'\n  const buttonClasses =\n    'flex items-center justify-center p-1 w-7 h-7 md:w-10 md:h-10 text-blue-500 rounded-full bg-white hover:bg-blue-900 hover:text-white'\n\n  const {isDarkMode, toggle} = useDarkMode()\n\n  return (\n    <header className={menuClasses}>\n      <div className=\"md:w-full bg-blue-500 py-2 px-3 md:py-8 text-white font-mono flex md:flex-col justify-center items-center\">\n        <Link to=\"/\" className=\"text-vertical flex items-center justify-center hover:bg-blue-900\">\n          {title}\n        </Link>\n\n        <div className=\"w-12 md:h-16 lg:h-24 md:w-auto border-t md:border-t-none md:border-l border-white mx-3 md:mx-0 md:my-4\" />\n\n        <div className=\"flex space-x-3 md:flex-col md:space-x-0 md:space-y-3\">\n          <a\n            className={buttonClasses}\n            href=\"https://twitter.com/simeonGriggs/\"\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Twitter className=\"w-full\" />\n            <div className=\"sr-only\">Twitter</div>\n          </a>\n          <a\n            className={buttonClasses}\n            href=\"https://github.com/SimeonGriggs/\"\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <GitHub className=\"w-full\" />\n            <div className=\"sr-only\">GitHub</div>\n          </a>\n          <button type=\"button\" onClick={() => toggle()} className={buttonClasses}>\n            {isDarkMode ? (\n              <SunIcon className=\"w-full h-auto md:w-5\" />\n            ) : (\n              <MoonIcon className=\"w-full h-auto md:w-5\" />\n            )}\n            <div className=\"sr-only\">{isDarkMode ? `Light` : `Dark`} Mode</div>\n          </button>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n", "function Twitter({className}: {className: string}) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      className={className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M3 17.68a10.215 10.215 0 005.53 1.623c6.697 0 10.478-5.658 10.25-10.73a7.346 7.346 0 001.8-1.866 7.192 7.192 0 01-2.072.565 3.604 3.604 0 001.588-1.996 7.196 7.196 0 01-2.308.877 3.608 3.608 0 00-6.153 3.289 10.246 10.246 0 01-7.412-3.766 3.612 3.612 0 001.12 4.816 3.558 3.558 0 01-1.635-.454A3.612 3.612 0 006.6 13.622a3.623 3.623 0 01-1.63.062 3.612 3.612 0 003.368 2.504A7.238 7.238 0 013 17.68z\"\n      />\n    </svg>\n  )\n}\n\nexport default Twitter\n", "function GitHub({className}: {className: string}) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      className={className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n      />\n    </svg>\n  )\n}\n\nexport default GitHub\n", "import type {MetaFunction, LoaderFunction} from 'remix'\nimport {useLoaderData} from 'remix'\n\nimport sanityImageUrl from '~/lib/sanityImageUrl'\nimport {articleQuery} from '~/lib/queries'\nimport {getClient} from '~/lib/sanityServer'\n\nimport ProseableText from '~/components/ProseableText'\nimport Label from '~/components/Label'\nimport Date from '~/components/Date'\nimport TableOfContents from '~/components/TableOfContents'\nimport {usePreviewSubscription} from '~/hooks/usePreviewSubscription'\n\nexport const handle = `article`\n\nexport const meta: MetaFunction = ({data, parentsData, location}) => {\n  const {title, summary, image} = data?.initialData ?? {}\n  const {siteMeta} = parentsData?.root ?? {}\n  const canonical = siteMeta?.siteUrl + location.pathname\n  const imageWidth = 1200\n  const imageHeight = 630\n\n  const imageMeta = image\n    ? {\n        'og:image:width': image ? String(imageWidth) : null,\n        'og:image:height': image ? String(imageHeight) : null,\n        'og:image': image\n          ? sanityImageUrl(image).height(imageHeight).width(imageWidth).toString()\n          : null,\n      }\n    : {}\n\n  return {\n    'theme-color': '#2522fc',\n    title: `${title} | ${siteMeta?.title}`,\n    description: summary,\n    canonical,\n    'twitter:card': 'summary_large_image',\n    'twitter:creator': siteMeta?.author,\n    'twitter:title': title,\n    'twitter:description': siteMeta?.description,\n    type: 'website',\n    'og:url': canonical,\n    ...imageMeta,\n  }\n}\n\n// export let links: LinksFunction = () => {\n//   return [{ rel: \"canonical\", href: stylesUrl }];\n// };\n\n// Runs server side\nexport const loader: LoaderFunction = async ({params}) => {\n  const preview = false\n  const article = await getClient(preview).fetch(articleQuery, params)\n\n  return {initialData: article, query: articleQuery, params, preview}\n}\n\n// Runs client side\nexport default function Article() {\n  const {initialData, query, params, preview} = useLoaderData()\n\n  const {data: article} = usePreviewSubscription(query, {\n    params,\n    initialData,\n    enabled: preview,\n  })\n\n  return (\n    <>\n      <header className=\"mt-32 md:mt-0 row-start-1 col-span-6 md:col-start-3 md:col-span-10 lg:col-start-5 lg:col-span-11\">\n        <div className=\"py-12 md:py-24 max-w-xl\">\n          <h1 className=\"leading-none font-black mb-8 tracking-tighter text-4xl md:text-6xl text-blue-500\">\n            {article.title}\n          </h1>\n          <p className=\"text-lg dark:text-blue-100 md:leading-8 font-mono\">{article.summary}</p>\n        </div>\n      </header>\n      <aside className=\"mb-4 md:mb-0 row-start-2 md:row-start-2 col-span-6 md:col-start-3 md:col-span-3 lg:col-start-5 lg:col-span-3 relative\">\n        {article?.content?.length > 0 ? (\n          <div className=\"grid grid-cols-1 gap-y-4 md:pr-12 sticky top-6\">\n            <Label>Table of Contents</Label>\n            <TableOfContents blocks={article.content} />\n          </div>\n        ) : null}\n      </aside>\n      <section className=\"row-start-3 md:row-start-2 col-span-6 lg:col-start-8 lg:col-span-8 pb-24\">\n        <Date updated={article?.updated} published={article?.published} />\n        {article?.content?.length > 0 ? <ProseableText blocks={article.content} /> : null}\n      </section>\n    </>\n  )\n}\n", "/* eslint-disable react/display-name */\nimport React from 'react'\nimport BlockContent from '@sanity/block-content-to-react'\nimport getYouTubeID from 'get-youtube-id'\n\nimport Button from './Button'\nimport Prism from './Prism'\nimport {config} from '~/lib/sanityConfig'\nimport sanityImageUrl from '~/lib/sanityImageUrl'\n\nconst {projectId, dataset} = config\n\nconst BlockRenderer = (props: any) => {\n  const {style = 'normal'} = props.node\n\n  if (/^h\\d/.test(style)) {\n    return React.createElement(style, {id: props.node._key}, props.children)\n  }\n\n  if (['code', 'pre'].includes(style)) {\n    const text = props?.node?.children.map((child: any) => child.text).join('')\n    return text ? <Prism code={text} /> : null\n  }\n\n  return BlockContent.defaultSerializers.types.block(props)\n}\n\ninterface BlockVideo {\n  url: string\n  title?: string\n}\ninterface BlockImage {\n  asset: {\n    altText: string\n  }\n}\n\ninterface BlockCode {\n  code: string\n  language?: string\n}\n\ninterface BlockButton {\n  link: {\n    link?: string\n    text: string\n  }\n}\n\nconst serializers = {\n  container: ({children}: {children: any}) => children,\n  types: {\n    block: BlockRenderer,\n    video: ({node}: {node: BlockVideo}) => {\n      const id = getYouTubeID(node.url)\n\n      return (\n        <a\n          href={node.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"-mx-4 block aspect-w-16 aspect-h-9\"\n        >\n          <img\n            src={`https://i.ytimg.com/vi/${id}/hqdefault.jpg`}\n            loading=\"lazy\"\n            alt={node?.title ?? ``}\n            className=\"w-full h-full object-cover\"\n          />\n        </a>\n      )\n    },\n    break: () => <hr />,\n    image: ({node}: {node: BlockImage}) => (\n      <p className=\"-mx-4 border-t border-b md:border border-gray-100\">\n        <img\n          loading=\"lazy\"\n          src={sanityImageUrl(node.asset).width(800).toString()}\n          alt={node?.asset?.altText}\n          className=\"w-full h-auto\"\n        />\n      </p>\n    ),\n    code: ({node}: {node: BlockCode}) =>\n      node?.code ? <Prism code={node.code} language={node?.language} /> : null,\n    button: ({node}: {node: BlockButton}) => (\n      <Button href={node.link.link}>{node.link.text}</Button>\n    ),\n  },\n}\n\nexport default function PortableText({blocks}: {blocks: any[]}) {\n  return (\n    <BlockContent\n      blocks={blocks}\n      serializers={serializers}\n      projectId={projectId}\n      dataset={dataset}\n    />\n  )\n}\n", "import {Link} from 'react-router-dom'\n\ninterface Props {\n  children: string\n  to?: string\n  className?: string\n  href?: string\n  disabled?: boolean\n  target?: string\n  type?: string\n}\n\ninterface Attributes {\n  target?: string\n  rel?: string\n}\n\nconst Button = ({children, to, className, href, disabled, target, type}: Props) => {\n  if (type === 'submit') {\n    return (\n      <button disabled={disabled} className={`button ${className || ''}`} type=\"submit\">\n        <span className=\"px-3\">{children}</span>\n      </button>\n    )\n  }\n\n  // Open in new window?\n  const attributes: Attributes = {}\n  if (target === '_blank') {\n    attributes.target = '_blank'\n    attributes.rel = 'noopener'\n  }\n\n  if (href) {\n    return (\n      <a {...attributes} className={`button ${className || ''}`} href={href}>\n        <span className=\"hidden md:block w-6 border-t border-white\" />\n        <span className=\"px-3\">{children}</span>\n        <span className=\"hidden md:block w-6 border-t border-white\" />\n      </a>\n    )\n  }\n\n  return (\n    <Link className={`button ${className || ''}`} to={to}>\n      {children}\n    </Link>\n  )\n}\n\nexport default Button\n", "import Highlight, {defaultProps} from 'prism-react-renderer'\nimport github from 'prism-react-renderer/themes/github'\n\nexport default function Prism({code = ``, language = `plaintext`}) {\n  return (\n    <Highlight {...defaultProps} code={code} language={language} theme={github}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            // eslint-disable-next-line react/jsx-key\n            <div {...getLineProps({line, key: i})}>\n              {line.map((token, key) => (\n                // eslint-disable-next-line react/jsx-key\n                <span {...getTokenProps({token, key})} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n", "import PortableText from './PortableText'\n\n/**\n * Use Tailwind CSS's `prose` classes with Portable Text markup (blocks)\n * Without inheriting styles for custom components (types)\n * https://www.sanity.io/guides/tailwindcss-typography-prose-portable-text\n */\nexport default function ProseableText({blocks = []}) {\n  // Group together standard `_type === \"block\"`  blocks\n  // eg <p>, <li>, etc \u2013 and separate out everyone else\n  const blockGroups = blocks.reduce(\n    (acc, item) => {\n      const lastIdx = acc.length - 1\n\n      if (\n        // We don't have items in this group yet\n        acc[lastIdx].length === 0 ||\n        // The last group has the same `type`\n        acc[lastIdx][0]._type === item._type\n      ) {\n        acc[lastIdx].push(item)\n      } else {\n        // Time to create a new group, because the `type` is different compared to last group\n        acc.push([item])\n      }\n\n      return acc\n    },\n    [[]]\n  )\n\n  if (!blockGroups?.length) return null\n\n  return (\n    <>\n      {blockGroups.map((group) =>\n        group[0]._type === 'block' ? (\n          <div\n            key={group[0]._key}\n            className=\"prose md:prose-lg dark:prose-dark prose-blue my-4 md:my-8\"\n          >\n            <PortableText blocks={group} />\n          </div>\n        ) : (\n          <PortableText key={group[0]._key} blocks={group} />\n        )\n      )}\n    </>\n  )\n}\n", "import React from 'react'\n\nexport default function Label({children}: {children: React.ReactNode}) {\n  return <p className=\"text-xs font-mono text-blue-700 dark:text-blue-100 uppercase\">{children}</p>\n}\n", "import React from 'react'\n\nimport Label from './Label'\n\nexport default function Date({updated, published}: {updated?: string; published: string}) {\n  return (\n    <Label>\n      <span className=\"flex flex-col md:flex-row md:items-center\">\n        {updated ? (\n          <span>\n            Updated {updated} <span className=\"opacity-50\">| Published {published}</span>\n          </span>\n        ) : (\n          <span>{published}</span>\n        )}\n      </span>\n    </Label>\n  )\n}\n", "interface Child {\n  text: string\n}\n\ninterface Block {\n  _key: string\n  style: string\n  children: [Child]\n}\n\nexport default function TableOfContents({blocks}: {blocks: [Block]}) {\n  const headings = blocks.filter((block) => ['h2', 'h3'].includes(block.style))\n\n  if (!headings?.length) {\n    return null\n  }\n\n  return (\n    <ul className=\"grid grid-cols-1 gap-y-4 font-mono text-xs sticky top-0\">\n      {headings.map((heading) => (\n        <li\n          key={heading._key}\n          className={heading.style === 'h3' ? `pl-3` : ``}\n          style={{textIndent: heading.style === 'h3' ? `-0.75rem` : ``}}\n        >\n          <a\n            href={`#${heading._key}`}\n            className=\"text-blue-500 dark:text-blue-200 hover:text-white dark:hover:text-white hover:bg-blue-500 block\"\n          >\n            {heading.style === 'h3' ? `\u2013 ` : ``}\n            {heading.children.map((child) => child.text).join('')}\n          </a>\n        </li>\n      ))}\n    </ul>\n  )\n}\n", "import {useEffect, useState} from 'react'\n\ninterface SubscriptionOptions<R = any> {\n  enabled?: boolean\n  params?: Record<string, unknown>\n  initialData?: R\n}\n\nexport function usePreviewSubscription(query: string, subscriptionOptions: SubscriptionOptions) {\n  const {enabled, params, initialData} = subscriptionOptions\n  const [data, setData] = useState(initialData)\n\n  useEffect(() => {\n    let sub: any\n    let store: any\n\n    if (enabled) {\n      sub = store.subscribe(\n        query,\n        params ?? {}, // Params\n        (err: any, result: any) => {\n          if (err) {\n            console.error('Oh no, an error:', err)\n            return\n          }\n\n          setData(result)\n        }\n      )\n    }\n\n    return () => {\n      if (sub) sub.unsubscribe()\n      if (store) store.close()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return {data}\n}\n", "import {MetaFunction, LoaderFunction, useMatches, useLoaderData, Link} from 'remix'\n\n// import stylesUrl from \"../styles/index.css\";\nimport {getClient} from '~/lib/sanityServer'\nimport {homeQuery} from '~/lib/queries'\nimport Intro from '~/components/Intro'\nimport Date from '~/components/Date'\n\nexport const handle = `home`\n\nexport const meta: MetaFunction = ({parentsData}) => {\n  const {siteMeta} = parentsData?.root ?? {}\n\n  return {\n    title: `${siteMeta?.title} - ${siteMeta?.description}`,\n    description: siteMeta?.description,\n  }\n}\n\n// export let links: LinksFunction = () => {\n//   return [{ rel: \"stylesheet\", href: stylesUrl }];\n// };\n\nexport const loader: LoaderFunction = async () => {\n  const articles = await getClient().fetch(homeQuery)\n\n  return {articles}\n}\n\nexport default function Index() {\n  const {articles} = useLoaderData()\n  const matches = useMatches()\n  const {bio} = matches?.find((match) => match.handle === 'root')?.data?.siteMeta ?? {}\n\n  return (\n    <section className=\"mt-48 md:mt-0 col-span-6 md:col-start-6 lg:col-start-8 md:col-span-6 lg:col-span-8\">\n      <div className=\"grid grid-cols-1 gap-y-12 md:gap-y-24 pt-12 md:py-48\">\n        <article className=\"prose prose-lg prose-blue\">\n          <h1>\n            <span className=\"wave\">\uD83D\uDC4B</span> Hey!\n          </h1>\n        </article>\n\n        {bio?.length > 0 ? <Intro blocks={bio} /> : null}\n\n        {articles.map((article) => (\n          <article key={article._id} className=\"grid grid-cols-1 gap-y-4\">\n            <h2 className=\"leading-none font-black tracking-tighter text-2xl md:text-4xl text-blue-500\">\n              <Link\n                to={`/${article.slug}`}\n                prefetch=\"intent\"\n                className=\"block hover:bg-blue-500 hover:text-white\"\n              >\n                {article.title}\n              </Link>\n            </h2>\n            <Date updated={article?.updated} published={article?.published} />\n            <div className=\"prose prose-lg dark:prose-dark prose-blue\">\n              <p>{article.summary}</p>\n            </div>\n          </article>\n        ))}\n      </div>\n    </section>\n  )\n}\n", "import PortableText from '~/components/PortableText'\n\nexport default function Intro({blocks = []}) {\n  return (\n    <div className=\"bg-blue-500 text-white font-mono md:text-lg p-4 md:p-8 intro\">\n      <PortableText blocks={blocks} />\n    </div>\n  )\n}\n"],
  "mappings": "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",
  "names": []
}

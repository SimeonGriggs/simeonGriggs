---
import {sanityFetch} from '../lib/sanityFetch'
import {sanityImageUrl} from '../lib/sanityImageUrl'

import BaseLayout from '../layouts/BaseLayout.astro'
import ProseableText from '../components/ProseableText'
import Label from '../components/Label'
import TableOfContents from '../components/TableOfContents'

export async function getStaticPaths() {
  const query = `*[_type == "article" && defined(slug.current)]|order(published desc){
      ...,
      image {
          ...,
          asset->
      },
      content[] {
          ...,
          _type == "image" => {
            ...,
            asset->
        },
      }
  }`
  const articles = await sanityFetch(query)

  return articles.map(article => ({
      params: {slug: article.slug.current},
      props: {article}
  }));
}

const {article} = Astro.props


---
<BaseLayout title={article.title}>
    {article?.image && (
        <figure class="fixed z-10 inset-0 h-48 md:h-screen w-full md:w-1/12 lg:w-3/16">
            <img
                src={sanityImageUrl(article.image).height(400).width(800)} 
                alt={article?.altText ?? article.title} 
                class="block md:hidden w-full h-full object-cover" 
            />
            <img
                src={sanityImageUrl(article.image).height(1200).width(400)} 
                alt={article?.altText ?? article.title} 
                class="hidden md:block w-full h-full object-cover" 
            />
        </figure>
    )}
    <header class="mt-48 md:mt-0 row-start-1 col-span-6 md:col-start-3 md:col-span-10 lg:col-start-5 lg:col-span-11">
        <div class="py-12 md:py-24 max-w-xl">
            <h1 class="leading-none font-black mb-8 tracking-tighter text-4xl md:text-6xl text-blue-500">
                {article.title}
            </h1>
            <p class="text-lg dark:text-blue-100 md:leading-8 font-mono">
                {article.summary}
            </p>
        </div>
    </header>
    <aside class="mb-4 md:mb-0 row-start-2 md:row-start-2 col-span-6 md:col-start-3 md:col-span-3 lg:col-start-5 lg:col-span-3 relative">
        <div class="grid grid-cols-1 gap-y-4 md:pr-12 sticky top-6">
            <Label>Table of Contents</Label>
            <TableOfContents blocks={article.content} />
        </div>
    </aside>
    <section class="row-start-3 md:row-start-2 col-span-6 lg:col-start-8 lg:col-span-8 pb-24">
        <Label>{article.published}</Label>
        <ProseableText blocks={article.content} />
    </section>
</BaseLayout>